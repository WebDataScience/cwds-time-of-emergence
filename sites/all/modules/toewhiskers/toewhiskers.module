<?php

function regionlookup($id){
  $regionlookup = array(
'01'=>'ADAMS',
'02'=>'ASOTIN',
'03'=>'BENTON',
'04'=>'CHELAN',
'05'=>'CLALLAM',
'06'=>'CLARK',
'07'=>'COLUMBIA',
'08'=>'COWLITZ',
'09'=>'DOUGLAS',
'10'=>'FERRY',
'11'=>'FRANKLIN',
'12'=>'GARFIELD',
'13'=>'GRANT',
'14'=>'GRAYS HARBOR',
'15'=>'ISLAND',
'16'=>'JEFFERSON',
'17'=>'KING',
'18'=>'KITSAP',
'19'=>'KITTITAS',
'20'=>'KLICKITAT',
'21'=>'LEWIS',
'22'=>'LINCOLN',
'23'=>'MASON',
'24'=>'OKANOGAN',
'25'=>'PACIFIC',
'26'=>'PEND OREILLE',
'27'=>'PIERCE',
'28'=>'SAN JUAN',
'29'=>'SKAGIT',
'30'=>'SKAMANIA',
'31'=>'SNOHOMISH',
'32'=>'SPOKANE',
'33'=>'STEVENS',
'34'=>'THURSTON',
'35'=>'WAHKIAKUM',
'36'=>'WALLA WALLA',
'37'=>'WHATCOM',
'38'=>'WHITMAN',
'39'=>'YAKIMA',
);
  return $regionlookup[$id];
}

function toewhiskers_menu() {
  $items['timeline'] = array(
    'page callback' => 'toewhiskers_page_function',
    'page arguments' => array(1, 'foo'),
    'access callback' => TRUE,
  );
  $items['timelinedata'] = array(
    'page callback' => 'toewhiskers_json_query_function',
    'page arguments' => array(1, 'sid'),
    'access callback' => TRUE,
  );
  $items['cigtoeconfig'] = array(
    'page callback' => 'toewhiskers_cigtoeconfig_function',
    'page arguments' => array(),
    'access callback' => TRUE,
  );
  return $items;
}



function toewhiskers_page_function(){
    // Call theme() function, so that Drupal includes the custom-page.tpl.php template
    drupal_add_js('https://www.google.com/jsapi');
    drupal_add_js("https://www.google.com/jsapi?autoload={'modules':[{'name':'visualization','version':'1','packages':['timeline']}]}");
    drupal_add_js(drupal_get_path('module', 'toewhiskers') . '/js/chart.js');
    return theme('timeline_template');
}




function toewhiskers_theme(){
    return array(
        'timeline_template' => array(
            // file name will be page-timeline.tpl.php
            'template' => 'page-timeline',
        ),
    );
}


function toewhiskers_json_query_function($sid){

  $verbose_test_mode = FALSE;
  
  $max_TOE_year = 2100;

  // The nid of the webform.
  $webformnid = '4';

  module_load_include('inc', 'webform', 'includes/webform.submissions');
 
  $webform = webform_get_submission($webformnid, $sid);
  $dataarray = $webform->data;
  
  //$region = regionlookup(trim($dataarray[7]['value'][0]));
  $region = trim($dataarray[7]['value'][0]);
  
  $compare = trim($dataarray[8]['value'][0]);
  // Multiple variables allowed.
  $variables = implode("','",$dataarray[1]['value']);
  $variables = str_replace(" ", "", $variables);
  $emission = trim($dataarray[2]['value'][0]);
  $dataset = trim($dataarray[6]['value'][0]);
  $tolerance = trim($dataarray[5]['value'][0]);
  $confidence = trim($dataarray[3]['value'][0]);

  
  /* Depricated. Based on original version of database.
  $query = "SELECT {SCEN1_DATA}.TOE,{SCEN1_DATA}.VARIABLEID,{SCEN1_DATA}.CHANGEDIR,{TOE_DATA}.VARIABLEDEF FROM {SCEN1_DATA} LEFT JOIN {TOE_DATA} on (TOE_DATA.VARIABLEID = SCEN1_DATA.VARIABLEID) WHERE 
  SCEN1_DATA.VARIABLEID in ('" . $variables . "') 
  AND SCEN1_DATA.REGION = '" . $region .   "' 
  AND SCEN1_DATA.EMISSCENARIO = '" . $emission .   "' 
  AND SCEN1_DATA.DATASET = '" . $dataset . "' 
  AND SCEN1_DATA.EMERGTHRES = " . $tolerance . "
  AND SCEN1_DATA.SIGNALCONFIDENCE = " . $confidence . "
  AND SCEN1_DATA.TOE <= " . $max_TOE_year . "
  LIMIT 20";
  */
 
  
  $query = "SELECT {SCEN1_DATA_V1}.TOE,{SCEN1_DATA_V1}.VARIABLEID,{SCEN1_DATA_V1}.CHANGEDIR,{TOE_DATA_V1}.VARIABLENAME,{TOE_DATA_V1}.VARIABLESHORTNAME FROM {SCEN1_DATA_V1} LEFT JOIN {TOE_DATA_V1} on (TOE_DATA_V1.VARIABLEID = SCEN1_DATA_V1.VARIABLEID) WHERE 
  SCEN1_DATA_V1.VARIABLEID in ('" . $variables . "') 
  AND SCEN1_DATA_V1.REGION = '" . $region .   "' 
  AND SCEN1_DATA_V1.EMISSCENARIO = '" . $emission .   "' 
  AND SCEN1_DATA_V1.DATASET = '" . $dataset . "' 
  AND SCEN1_DATA_V1.EMERGTHRES = " . $tolerance . "
  AND SCEN1_DATA_V1.SIGNALCONFIDENCE = " . $confidence . "
  AND SCEN1_DATA_V1.TOE <= " . $max_TOE_year . "
  AND SCEN1_DATA_V1.MODELAGREEMENT = 'XX' 
  AND SCEN1_DATA_V1.GCM = 'GCM_ensemble' 
  LIMIT 20";
  
  
  if($verbose_test_mode){print($query);}
  
  
  
  $output = "";
  $toe = array();
  
  db_set_active('cig_toe');
  
  $result = db_query($query);
  // Result is returned as a iterable object that returns a stdClass object on each iteration
  foreach ($result as $record) {
    // Perform operations on $record->title, etc. here. In this example the available data would be mapped to object properties:
    // $record->nid, $record->title, $record->created
    //$output .= "variableid: " . $record->VARIABLEID . " toe: " . $record->TOE;
    $toe[$record->VARIABLEID] = array($record->CHANGEDIR,intval($record->TOE),$record->VARIABLENAME,$record->VARIABLEID,ceil($record->TOE/5)*5,$record->VARIABLESHORTNAME);
  }

  db_set_active();
  
  
  $toedata = array(
    "toedata" => $toe,
    "query" => $query,
    "maxtoeyear" => $max_TOE_year,
    "sid" => $sid,
    "scenario" => $emission,
    "confidence" => $confidence,
    "tolerance" => $tolerance,
    "dataset" => $dataset,
    //"webform" => $webform,
    //"output" => $output,
  );  
  drupal_json_output($toedata);
  
}



function toewhiskers_cigtoeconfig_function(){
  
  $o = "";
  db_set_active('cig_toe');
  
  $columns = array('REGION','EMISSCENARIO','DATASET','EMERGTHRES','SIGNALCONFIDENCE','MODELAGREEMENT','GCM');
  foreach ($columns as $column) {
    $o .= "<br/>" . $column . "<br/>";
    $query = "SELECT DISTINCT " . $column . " FROM {SCEN1_DATA_V1}";
    
    $result = db_query($query);
    // Result is returned as a iterable object that returns a stdClass object on each iteration
    foreach ($result as $record) {
      $o .= $record->$column . "|" . $record->$column . "<br/>";
    }
  }
  
  $queries = array('SELECT DISTINCT SCEN1_DATA_V1.VARIABLEID AS k, TOE_DATA_V1.VARIABLENAME AS v FROM SCEN1_DATA_V1 LEFT JOIN TOE_DATA_V1 ON (TOE_DATA_V1.VARIABLEID = SCEN1_DATA_V1.VARIABLEID)');
  
  foreach ($queries as $query) {
    print($query);
    $o .= "<br/>" . $query . "<br/>";
    //$query = "SELECT DISTINCT " . $column . " FROM {SCEN1_DATA_V1}";
    
    $result = db_query($query);
    // Result is returned as a iterable object that returns a stdClass object on each iteration
    foreach ($result as $record) {
      $o .= $record->k . "|" . $record->v . "<br/>";
    }
  }

  db_set_active();
  
  print($o);
}
  



  